{% set contenttypeslug    = 'pages' %}
{% set subtype            = 'all' %}
{% set excludedcategories = app.config.get('general/europeana/excludedcategories') %}

{# set the contenttype if there is one #}
{% if records is defined and records|first.contenttype is defined %}
   {% set contenttypeslug = records|first.contenttype.slug %}

{# if the listing is made by a module, get that listing #}
{% elseif record.modules is defined %}
    {% for module in record.modules if (global.request.get('_route') != "preview") %}
        {% if module.get('templates') in ['listing', 'teaser']  %}
            {% set contenttypeslug = module.get('sources') %}
            {% set subtype = module.get('filter_' ~ contenttypeslug)|default('all') %}
        {% endif %}
    {% endfor %}
{% endif %}

{# get correct contenttype from slug #}
{% set contenttype = app.config.get('contenttypes/' ~ contenttypeslug ) %}
{% set filterchapters = [] %}

{% if contenttype is defined %}
    {# get main categorisation from contenttype #}
    {% if contenttypeslug == 'persons' %}
        {% set contenttypepath = '/' ~ contenttypeslug ~ '/network_participation/' %}
        {% set categories = contenttype.fields.network_participation.values %}
    {% elseif contenttypeslug == 'projects' %}
        {# Projects: filter by market or service #}
        {# Working groups: filter by market or service #}
        {# Task force: filter by market or service #}

        {% set filterchapters = ['Markets','Categories'] %}

    {% elseif contenttypeslug == 'posts' %}
        {# Pressreleases: filter by market or service #}
        {# Publications: filter by market or service #}
        {# Blogs: filter by market or service #}

        {% set filterchapters = ['Markets','Categories'] %}

    {% elseif contenttypeslug == 'data' %}
        {# Dataset: filter by native category #}
        {# Apps: filter by appcategories #}

        {% set contenttypepath = '/' ~ contenttypeslug ~ '/datatype/' %}
        {% set categories = contenttype.fields.datatype.values %}

    {% elseif contenttypeslug == 'events' %}
        {# Events: filter by market or service #}

        {% set filterchapters = ['Markets','Categories'] %}

    {% else %}
        {% set categories = {} %}
    {% endif %}
{% else %}
    {% set categories = {} %}
{% endif %}

{% if filterchapters is not empty %}
<div class="filter-listing">
    <h2 class="sr-only">Filter this list</h2>
    <div class="current-filters">
        <a class="toggle-filter" href="#">Filter by
            <span class="arrow-down"></span>
        </a>

        {% if app.request.attributes.get('taxonomyterm', false) is not empty %}
            {% set taxonomyname = app.request.attributes.get('taxonomyname') %}
            {% set taxonomyterm = app.request.attributes.get('taxonomyterm') %}
            {% set currenttaxonomy = app.config.get('taxonomy/' ~ taxonomyname) %}

            <span class="this-filter">{{ currenttaxonomy.name }}: {{ currenttaxonomy.options[taxonomyterm] }}</span>

            {% if records is defined %}
                <a class="reset-filter" href="{{ path('contentlisting', { contenttypeslug: app.request.attributes.get('contenttypeslug') }) }}">
            {% else %}
                <a class="reset-filter" href="{{ record.link }}">
            {% endif %}

                <span class="sr-only">Reset filter</span>
                <svg class="icon icon-delete">
                    <use xlink:href="#icon-delete"></use>
                </svg>
            </a>
        {% endif %}
    </div>

    <div class="filter-container group">
        <div class="arrow-up"></div>

        <ul class="filter-chaptertitles">
            {% for chapter in filterchapters%}
            <li>
                <a href="#" class="chapter-toggle chapter-toggle-{{- chapter -}}">
                    {{- chapter -}}
                    <svg class="icon icon-next">
                        <use xlink:href="#icon-next"></use>
                    </svg>
                </a>

                <div class="filters-chapter filters-{{- chapter -}}" id="filters-{{- chapter -}}">
                    <h3>{{ chapter }}</h3>
                    <ul class="filterlist" >
                        {% set filters = app.config.get('taxonomy/'~ chapter|lower ~'/options') %}
                        {% for filter, filtername in filters if filtername not in excludedcategories %}
                            {# -- NOTE: slugified subtypes -- #}
                            {# -- NOTE: the viewblocklisting route does not make use of the hierarchical routes -- #}
                            {% if records is defined %}
                                {% set link = path('contentlistingfiltered', {
                                    contenttypeslug : records|first.contenttype.slug,
                                    subtype         : subtype|slugify,
                                    taxonomyname    : chapter|lower,
                                    taxonomyterm    : filter
                                }) %}
                            {% else %}
                                {% set link = path('viewblocklisting', {
                                    contenttypeslug : record.contenttype.slug,
                                    slug            : record.slug,
                                    subtype         : subtype|slugify,
                                    taxonomyname    : chapter|lower,
                                    taxonomyterm    : filter
                                }) %}
                            {% endif %}

                            <li{% if app.request.attributes.get('taxonomyterm', false) == filter %} class="current"{% endif %}>
                                <a href="{{ link }}">{{ filtername }}</a>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </li>
            {% endfor %}
        </ul>
    </div>
</div>
{% endif %}
